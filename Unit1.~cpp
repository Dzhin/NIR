//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Unit2.h"
#include "Unit3.h"
#include "Unit4.h"
#include <time.h>
#include "Fill.h"
#include "bmpfile.h"
#include "anyfile.h"
#include "Memory.h"
#include "ImageBase.h"
#include "Grad.h"
#include <stdlib.h>
#include <stdio.h>
#include "SpecFunction.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
        : TForm(Owner)
{
int X,Y;
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
IB.ViewImage_(Form1->Image1);//Вывод на форму изображения
ReadBMPFile("rez_i.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB1(X,Y);
IB1.ReadFile("rez_i.bmp");//Чтение изображения из файла
IB1.ViewImage_(Form1->Image2);//Вывод на форму изображения
ReadBMPFile("rez_p.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB2(X,Y);
IB2.ReadFile("rez_p.bmp");//Чтение изображения из файла
IB2.ViewImage_(Form1->Image3);//Вывод на форму изображения
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N2Click(TObject *Sender)
{
int i,j,X,Y;
Form1->OpenDialog1->Execute();
ReadBMPFile(Form1->OpenDialog1->FileName.c_str(),X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile(Form1->OpenDialog1->FileName.c_str());//Чтение изображения из файла
IB.ViewImage_(Form1->Image1);//Вывод на форму изображения
unsigned char *buf=new unsigned char [IB.SizeImageX];
BmpFile BMP1;
BMP1.OpenFile("temp.bmp",IB.SizeImageY,IB.SizeImageX,8);
for (i=0;i<IB.SizeImageY;i++)
{
 for (j=0;j<IB.SizeImageX;j++)
 {
  buf[j] = IB.Image[i][j];
 }
 BMP1.WriteString(i,buf);                        
}
BMP1.CloseFile();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N3Click(TObject *Sender)
{
 int i,j,X,Y;
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
Form1->SaveDialog1->Execute();
IB.WriteFile(Form1->SaveDialog1->FileName.c_str(),2);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::N1Click(TObject *Sender)
{
 int i,j,X,Y;
ReadBMPFile("rez_i.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("rez_i.bmp");//Чтение изображения из файла
Form1->SaveDialog1->Execute();
IB.WriteFile(Form1->SaveDialog1->FileName.c_str(),2);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::N7Click(TObject *Sender)
{
 int i,j,i1,j1,k,m;
 int N;
 float npl,nps;
 float x,y,r,fi,p,freq,dx;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;

 ImageBase IB(N,N);
 ImageBase IB_(N,N);
 ImageBase IBC(N,N);

 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx)
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB.Image[i][j] = (int)p;/*присвоение фазы*/
               IB.ImageComplex[i][j] = polar((float)1.,(float)(m*fi));
               IB_.ImageComplex[i][j] = polar((float)1.,(float)((-m)*fi));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB.Image[i][j] = arg(IB.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                }
         }
      }

IB.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::N17Click(TObject *Sender)
{
Form2->Show();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::N8Click(TObject *Sender)
{
 int i,j,i1,j1,k,m;
 int N;
 float npl,nps;
 float x,y,r,fi,p,freq,dx,gam;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;
 gam = StrToFloat(Form2->Edit3->Text);

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;

 ImageBase IB(N,N);
 ImageBase IB_(N,N);
 ImageBase IBC(N,N);

 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx&&(r>dx))
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB.Image[i][j] = (int)p;/*присвоение фазы*/
               IB.ImageComplex[i][j] = polar((float)1.,(float)(gam*log(r)+(m)*fi));
               IB_.ImageComplex[i][j] = polar((float)1.,(float)(-gam*log(r)+(-m)*fi));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB.Image[i][j] = arg(IB.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                }
         }
      }
IB.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N10Click(TObject *Sender)
{
double Kw,Err,Ir,dlt,Aver,x,y,r,ga;
int i,j,m,ct,beam,X,Y;
OpenDialog1->InitialDir = ".";
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
ga = StrToFloat(Form2->Edit9->Text);
beam = (int)(Form2->RadioButton6->Checked)*1+(int)(Form2->RadioButton7->Checked)*2+
       (int)(Form2->RadioButton15->Checked)*3;
switch(beam)
      {
       case 1:
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)1.,(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
        case 2:
        for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)((r*r)/ga/ga),(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
       case 3:
       Form1->OpenDialog1->Execute();
       ReadBMPFile(Form1->OpenDialog1->FileName.c_str(),X,Y);//Чтение заголовка BMP файла
       ImageBase IB_A(X,Y);
       IB_A.ReadFile(Form1->OpenDialog1->FileName.c_str());//Чтение изображения из файла
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)(IB_A.Image[i][j]/255.),(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;

      }
IB.Zeros=StrToInt(Form2->CSpinEdit5->Value);
ct = StrToInt(Form2->Edit8->Text);
Screen->Cursor = crHourGlass;
IB.fft(1);
IB.CenterCat(ct);//Вырезать центр изображения
IB.ViewImageComplex_(Form1->Image2,0,1,1);//Вывод на форму комплексного изображения
IB.ViewImageComplex_(Form1->Image3,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("rez_i.bmp",0);
IB.WriteFile("rez_a.bmp",1);
IB.WriteFile("rez_p.bmp",2);
Screen->Cursor = crArrow;
}
//---------------------------------------------------------------------------


void __fastcall TForm1::N19Click(TObject *Sender)
{
 int i,j,X,Y;
ReadBMPFile("rez_a.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("rez_a.bmp");//Чтение изображения из файла
Form1->SaveDialog1->Execute();
IB.WriteFile(Form1->SaveDialog1->FileName.c_str(),2);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N20Click(TObject *Sender)
{
 int i,j,X,Y;
ReadBMPFile("rez_p.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("rez_p.bmp");//Чтение изображения из файла
Form1->SaveDialog1->Execute();
IB.WriteFile(Form1->SaveDialog1->FileName.c_str(),1);
}
//---------------------------------------------------------------------------


void __fastcall TForm1::N11Click(TObject *Sender)
{
double Kw,Err,Ir,dlt,Aver,x,y,r,ga,p;
int i,j,m,N=512,ct,beam,X,Y;
float size,distance;
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
size = StrToFloat(Form2->Edit10->Text);
distance = StrToFloat(Form2->Edit7->Text);
Kw = 2*M_PI/StrToFloat(Form2->Edit6->Text)*1E9;
ga = StrToFloat(Form2->Edit9->Text);
beam = (int)(Form2->RadioButton6->Checked)*1+(int)(Form2->RadioButton7->Checked)*2+
       (int)(Form2->RadioButton15->Checked)*3;
switch(beam)
      {
       case 1://плоская волна
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               p = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)1.,(float)(p*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
        case 2://гауссов пучок
        for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               p = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)((r*r)/ga/ga),(float)(p*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
       case 3://произвольная амплитуда
       Form1->OpenDialog1->Execute();
       ReadBMPFile(Form1->OpenDialog1->FileName.c_str(),X,Y);//Чтение заголовка BMP файла
       ImageBase IB_A(X,Y);
       IB_A.ReadFile(Form1->OpenDialog1->FileName.c_str());//Чтение изображения из файла
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               p = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)(IB_A.Image[i][j]/255.),(float)(p*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;

      }
IB.Zeros=StrToInt(Form2->CSpinEdit5->Text);
ct = StrToInt(Form2->Edit8->Text);
Screen->Cursor = crHourGlass;
if(distance>50*size)
  IB.frt2Dz (size,size,distance,Kw,1.);
else
  {
   IB.frt2Dz (size,size,size*100,Kw,1.);
   IB.frt2Dz (size,size,size*100-distance,Kw,-1.);
  }
IB.CenterCat(ct);//Вырезать центр изображения
IB.ViewImageComplex_(Form1->Image2,0,1,1);//Вывод на форму комплексного изображения
IB.ViewImageComplex_(Form1->Image3,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("rez_i.bmp",0);
IB.WriteFile("rez_a.bmp",1);
IB.WriteFile("rez_p.bmp",2);
Screen->Cursor = crArrow;
}
//---------------------------------------------------------------------------


void __fastcall TForm1::N14Click(TObject *Sender)
{
int i,j,m,X,Y;
int b,e,s,vs,nx,ny;
float A,B;
float *mas;
AnsiString sg,sv;
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла



s = StrToInt(Form2->CSpinEdit2->Value);//Номер строки или столбца
b = StrToInt(Form2->CSpinEdit3->Value);//Начало сечения
e = StrToInt(Form2->CSpinEdit4->Value);//Конец сечения
nx = StrToInt(Form2->CSpinEdit6->Value);
ny = StrToInt(Form2->CSpinEdit7->Value);
A = StrToFloat(Form2->Edit4->Text);
B = StrToFloat(Form2->Edit5->Text);
sg = Form2->Edit11->Text;
sv = Form2->Edit12->Text;

vs = (int)(Form2->RadioButton8->Checked)*1+(int)(Form2->RadioButton9->Checked)*2;
switch(vs)
      {
case 1:
       mas = new float[e-b];
       for(j=0;j<(e-b);j++)
          {
           if(s>=IB.SizeImageY)
             s = IB.SizeImageY/2;
           if(IB.SizeImageX>j)
              mas[j] = IB.Image[s][b+j];
           else
              mas[j] = 0;
          }
       Grafik_S(Form3->Image1,mas,A,B,e-b,nx,ny,sg,sv);//График с подписями
       delete mas;
       break;
case 2:
       mas = new float[e-b];
       for(i=0;i<(e-b);i++)
          {
           if(s>=IB.SizeImageX)
             s = IB.SizeImageX/2;
           if(IB.SizeImageY>i)
             mas[i] = IB.Image[b+i][s];
           else
             mas[i] = 0;
          }
       Grafik_S(Form3->Image1,mas,A,B,e-b,nx,ny,sg,sv);//График с подписями
       delete mas;
       break;
      }
Form3->Show();
}         //---------------------------------------------------------------------------


void __fastcall TForm1::N22Click(TObject *Sender)
{
int i,j,m,X,Y;
int b,e,s,vs,nx,ny,A,B;
float *mas,*mas1;
AnsiString sg,sv;
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла


Form1->OpenDialog1->Execute();
ReadBMPFile(Form1->OpenDialog1->FileName.c_str(),X,Y);//Чтение заголовка BMP файла
ImageBase IB1(X,Y);
IB1.ReadFile(Form1->OpenDialog1->FileName.c_str());//Чтение изображения из файла





s = StrToInt(Form2->CSpinEdit2->Value);//Номер строки или столбца
b = StrToInt(Form2->CSpinEdit3->Value);//Начало сечения
e = StrToInt(Form2->CSpinEdit4->Value);//Конец сечения
nx = StrToInt(Form2->CSpinEdit6->Value);
ny = StrToInt(Form2->CSpinEdit7->Value);
A = StrToInt(Form2->Edit4->Text);
B = StrToInt(Form2->Edit5->Text);
sg = Form2->Edit11->Text;
sv = Form2->Edit12->Text;

vs = (int)(Form2->RadioButton8->Checked)*1+(int)(Form2->RadioButton9->Checked)*2;
switch(vs)
      {
case 1:
       mas = new float[e-b];
       mas1 = new float[e-b];
       for(j=0;j<(e-b);j++)
          {
           if(s>=IB.SizeImageY)
             s = IB.SizeImageY/2;
           if(IB.SizeImageX>j)
              {
               mas[j] = IB.Image[s][b+j];
               mas1[j] = IB1.Image[s][b+j];
              }
           else
              {
               mas[j] = 0;
               mas1[j] = 0;
              }
          }
       Grafik_S2(Form3->Image1,mas,mas1,A,B,e-b,nx,ny,sg,sv);//График с подписями
       delete mas;
       delete mas1;
       break;
case 2:
       mas = new float[e-b];
       for(i=0;i<(e-b);i++)
          {
           if(s>=IB.SizeImageX)
             s = IB.SizeImageX/2;
           if(IB.SizeImageY>i)
             mas[i] = IB.Image[b+i][s];
           else
             mas[i] = 0;
          }
       Grafik_S(Form3->Image1,mas,A,B,e-b,nx,ny,sg,sv);//График с подписями
       delete mas;
       break;
      }
Form3->Show();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N12Click(TObject *Sender)
{
double Kw,Err,Ir,dlt,Aver,x,y,r,ga,p;
int i,j,m,N=512,ct,beam,X,Y,n;
float size,distance;
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB_(X,Y);
IB_.ReadFile("temp.bmp");//Чтение изображения из файла
size = StrToFloat(Form2->Edit10->Text);
distance = StrToFloat(Form2->Edit7->Text);
Kw = 2*M_PI/StrToFloat(Form2->Edit6->Text)*1E9;
ga = StrToFloat(Form2->Edit9->Text);
n  = StrToInt(Form2->CSpinEdit5->Value);
ImageBase IB(n*X,n*Y);

for(i=IB.SizeImageY*(n-1)/2/n;i<IB.SizeImageY*(n+1)/2/n;i++)
   {
    for(j=IB.SizeImageX*(n-1)/2/n;j<IB.SizeImageX*(n+1)/2/n;j++)
       {
        IB.Image[i][j] = IB_.Image[int(i-IB.SizeImageY*(n-1)/2/n)][int(j-IB.SizeImageX*(n-1)/2/n)];
       }
   }

beam = (int)(Form2->RadioButton6->Checked)*1+(int)(Form2->RadioButton7->Checked)*2+
       (int)(Form2->RadioButton15->Checked)*3;
switch(beam)
      {
       case 1:
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               p = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2/n)
               IB.ImageComplex[i][j] = polar((float)1.,(float)(p*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
        case 2:
        for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               p = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2/n)
               IB.ImageComplex[i][j] = polar((float)((r*r)/ga/ga),(float)(p*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
       case 3:
       Form1->OpenDialog1->Execute();
       ReadBMPFile(Form1->OpenDialog1->FileName.c_str(),X,Y);//Чтение заголовка BMP файла
       ImageBase IB_A(X,Y);
       IB_A.ReadFile(Form1->OpenDialog1->FileName.c_str());//Чтение изображения из файла
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               p = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2/n)
               IB.ImageComplex[i][j] = polar((float)(IB_A.Image[i][j]/255.),(float)(p*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;

      }
IB.WriteFile("temp.bmp",2);      
IB.Zeros=StrToInt(Form2->CSpinEdit5->Text);
ct = StrToInt(Form2->Edit8->Text);
Screen->Cursor = crHourGlass;
TDateTime DateTime1 = Time();
IB.IKG_(size,size,distance,Kw,n);
TDateTime DateTime2 = Time();
//Edit1->Text = TimeToStr(DateTime2-DateTime1);
IB.CenterCat(ct);//Вырезать центр изображения
IB.ViewImageComplex_(Form1->Image2,0,1,1);//Вывод на форму комплексного изображения
IB.ViewImageComplex_(Form1->Image3,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("rez_i.bmp",0);
IB.WriteFile("rez_a.bmp",1);
IB.WriteFile("rez_p.bmp",2);
Screen->Cursor = crArrow;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N23Click(TObject *Sender)
{
 int i,j,m;
 int N;
 float freq,dx,gam;
 float **FourC;
 int Size;
 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;
 gam = StrToFloat(Form2->Edit3->Text);
 Size = 2;
 ImageBase Im(N,N);
 CreateArrayFloat2(Size,Size,FourC);
/* for(i=0;i<Size;i++)
     for(j=0;j<Size;j++)
        {
         FourC[i][j] = i+j;
        }*/
 FourC[0][0] = 0.09;FourC[0][1] = 0.04; FourC[1][0] = 0.37; FourC[1][1] = 0.27;
 Im.FourFunction(FourC,Size);//Заполнение изображения косинусным рядом с коэф. FourC,
 Im.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
 DeleteArrayFloat2(Size,FourC);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N24Click(TObject *Sender)
{
 int i,j,i1,j1,k,m;
 int N;
 float npl,nps;
 float x,y,r,fi,p,freq,dx;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;

 ImageBase IB(N,N);
 ImageBase IB_(N,N);
 ImageBase IBC(N,N);
 ImageBase IB1(N,N);
 ImageBase IB1_(N,N);
 ImageBase IBC1(N,N);

 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx)
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB.Image[i][j] = (int)p;/*присвоение фазы*/
               IB.ImageComplex[i][j] = polar((float)1.,(float)(m*fi));
               IB_.ImageComplex[i][j] = polar((float)1.,(float)((-m)*fi));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB.Image[i][j] = arg(IB.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                }
         }
      }
 freq = freq*1.2;
 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx)
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB1.Image[i][j] = (int)p;/*присвоение фазы*/
               IB1.ImageComplex[i][j] = polar((float)1.,(float)(-m*fi));
               IB1_.ImageComplex[i][j] = polar((float)1.,(float)((m)*fi));
              }
           else
              {
               IB1.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB1_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB1.Image[i][j] = arg(IB1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                }
          IBC.ImageComplex[i][j] = (IB.ImageComplex[i][j]+IB1.ImageComplex[i][j])/(float)2.;
         }
      }

IBC.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IBC.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N25Click(TObject *Sender)
{
 int i,j,i1,j1,k,m;
 int N;
 float npl,nps;
 float x,y,r,fi,p,freq,dx;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;

 ImageBase IB(N,N);
 ImageBase IB_(N,N);
 ImageBase IBC(N,N);
 ImageBase IB1(N,N);
 ImageBase IB1_(N,N);
 ImageBase IBC1(N,N);

 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx)
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB.Image[i][j] = (int)p;/*присвоение фазы*/
               IB.ImageComplex[i][j] = polar((float)1.,(float)(m*fi));
               IB_.ImageComplex[i][j] = polar((float)1.,(float)((-m)*fi));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB.Image[i][j] = arg(IB.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                }
         }
      }
 freq = freq*2;
 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx)
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB1.Image[i][j] = (int)p;/*присвоение фазы*/
               IB1.ImageComplex[i][j] = polar((float)1.,(float)(-m*fi));
               IB1_.ImageComplex[i][j] = polar((float)1.,(float)((m)*fi));
              }
           else
              {
               IB1.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB1_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB1.Image[i][j] = arg(IB1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC1.ImageComplex[i][j]+=IB1.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB1_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB1.ImageComplex[i][j] = IBC1.ImageComplex[i][j];
                 IB1.Image[i][j] = arg(IBC1.ImageComplex[i][j])/2./M_PI*255.;
                }
          IBC.ImageComplex[i][j] = (IB.ImageComplex[i][j]+IB1.ImageComplex[i][j])/(float)2.;
         }
      }

IBC.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IBC.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Ajrecfnjh11Click(TObject *Sender)
{
double Kw,Err,Ir,dlt,Aver,x,y,r,ga;
int i,j,m,ct,beam,X,Y;
OpenDialog1->InitialDir = ".";
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
ga = StrToFloat(Form2->Edit9->Text);
beam = (int)(Form2->RadioButton6->Checked)*1+(int)(Form2->RadioButton7->Checked)*2+
       (int)(Form2->RadioButton15->Checked)*3;
switch(beam)
      {
       case 1:
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)1.,(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
        case 2:
        for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)((r*r)/ga/ga),(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
       case 3:
       Form1->OpenDialog1->Execute();
       ReadBMPFile(Form1->OpenDialog1->FileName.c_str(),X,Y);//Чтение заголовка BMP файла
       ImageBase IB_A(X,Y);
       IB_A.ReadFile(Form1->OpenDialog1->FileName.c_str());//Чтение изображения из файла
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)(IB_A.Image[i][j]/255.),(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;

      }
IB.Zeros=StrToInt(Form2->CSpinEdit5->Value);
ct = StrToInt(Form2->Edit8->Text);
Screen->Cursor = crHourGlass;
IB.fft(-1);
IB.CenterCat(ct);//Вырезать центр изображения
ImageBase IB1(X,Y);
ImageBase IBC(X,Y);
       for(i=0;i<IB.SizeImageY;i++)
          {
           for(j=0;j<IB.SizeImageX;j++)
              {
               IB1.ImageComplex[i][j]=polar(abs(IB.ImageComplex[i][j]),
                                           -arg(IB.ImageComplex[i][j]));
//               IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]+IB1.ImageComplex[i][j];
               IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar(abs(IB.ImageComplex[i][j]),(float)((15000)*(x)))
                      +IB1.ImageComplex[i][j]*polar(abs(IB.ImageComplex[i][j]),(float)((-15000*(x))));
               IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
               IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
              }
          }

IB.ViewImageComplex_(Form1->Image2,0,1,1);//Вывод на форму комплексного изображения
IB.ViewImageComplex_(Form1->Image3,2,1,1);//Вывод на форму комплексного изображения
IBC.WriteFile("doe_i.bmp",0);
IBC.WriteFile("doe_a.bmp",1);
IBC.WriteFile("doe_p.bmp",2);
Screen->Cursor = crArrow;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N26Click(TObject *Sender)
{
double Kw,Err,Ir,dlt,Aver,x,y,r,ga;
int i,j,m,ct,beam,X,Y;
OpenDialog1->InitialDir = ".";
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
ga = StrToFloat(Form2->Edit9->Text);
beam = (int)(Form2->RadioButton6->Checked)*1+(int)(Form2->RadioButton7->Checked)*2+
       (int)(Form2->RadioButton15->Checked)*3;
switch(beam)
      {
       case 1:
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)1.,(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
        case 2:
        for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)((r*r)/ga/ga),(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;
       case 3:
       Form1->OpenDialog1->Execute();
       ReadBMPFile(Form1->OpenDialog1->FileName.c_str(),X,Y);//Чтение заголовка BMP файла
       ImageBase IB_A(X,Y);
       IB_A.ReadFile(Form1->OpenDialog1->FileName.c_str());//Чтение изображения из файла
       for(i=0;i<IB.SizeImageY;i++)
          {
           x = i-IB.SizeImageY/2;
           for(j=0;j<IB.SizeImageX;j++)
              {
               y = j-IB.SizeImageX/2;
               r = sqrt(x*x+y*y);
               Kw = (double)IB.Image[i][j];
               if(r<IB.SizeImageX/2)
               IB.ImageComplex[i][j] = polar((float)(IB_A.Image[i][j]/255.),(float)(Kw*2*M_PI/255.));
               else
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
              }
          }
        break;

      }
IB.Zeros=StrToInt(Form2->CSpinEdit5->Value);
ct = StrToInt(Form2->Edit8->Text);
Screen->Cursor = crHourGlass;
IB.fft(-1);
IB.CenterCat(ct);//Вырезать центр изображения
int NN = 16;
float maxa;
maxa = 0;
int k,l;
       for(i=0;i<IB.SizeImageY;i++)
          {
           for(j=0;j<IB.SizeImageX;j++)
              {
               if(maxa<abs(IB.ImageComplex[i][j]))
                  maxa = abs(IB.ImageComplex[i][j]);
              }
          }
ImageBase IBN(NN*X,NN*Y);
ImageBase IBN1(NN*X,NN*Y);
ImageBase IBN2(NN*X,NN*Y);
       for(i=0;i<IB.SizeImageY;i++)
          {
           for(j=0;j<IB.SizeImageX;j++)
              {
               for(k=0;k<NN;k++)
                  {
                   for(l=0;l<NN;l++)
                      {
                       IBN1.ImageComplex[i*NN+k][j*NN+l] = polar((float)1.,arg(IB.ImageComplex[i][j]));
                      }
                  }
              }
          }

       for(i=0;i<IB.SizeImageY;i++)
          {
           for(j=0;j<IB.SizeImageX;j++)
              {
               for(k=0;k<NN;k++)
                  {
                   for(l=0;l<NN;l++)
                      {
                       if(k<NN/2*acos(abs(IB.ImageComplex[i][j])/maxa))
                         {
                          IBN.ImageComplex[i*NN+k][j*NN+l] = polar((float)1.,(float)0.);
                         }
                       else
                         {
                          IBN.ImageComplex[i*NN+k][j*NN+l] = polar((float)1.,(float)M_PI);
                         }
                      }
                  }
              }
          }
       for(i=0;i<IB.SizeImageY;i++)
          {
           for(j=0;j<IB.SizeImageX;j++)
              {
               for(k=0;k<NN;k++)
                  {
                   for(l=0;l<NN;l++)
                      {
                      // if(arg(IBN1.ImageComplex[i*NN+k][j*NN+l])>arg(IBN.ImageComplex[i*NN+k][j*NN+l]))
//                       IBN2.ImageComplex[i*NN+k][j*NN+l] = polar((float)1.,arg(IBN1.ImageComplex[i*NN+k][j*NN+l]));
  //                     else
                       IBN2.ImageComplex[i*NN+k][j*NN+l] = 
                       polar((float)1.,arg(IBN1.ImageComplex[i*NN+k][j*NN+l])+
                                       arg(IBN.ImageComplex[i*NN+k][j*NN+l]));
                      }
                  }
              }
          }

IB.ViewImageComplex_(Form1->Image2,0,1,1);//Вывод на форму комплексного изображения
IB.ViewImageComplex_(Form1->Image3,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("doe_i1.bmp",0);
IB.WriteFile("doe_a1.bmp",1);
IB.WriteFile("doe_p1.bmp",2);
IBN2.WriteFile("doe_i.bmp",0);
IBN2.WriteFile("doe_a.bmp",1);
IBN2.WriteFile("doe_p.bmp",2);
Screen->Cursor = crArrow;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N27Click(TObject *Sender)
{
int i,j,i1,j1,m,X,Y,xm,ym;
int b,e,s,vs,nx,ny;
float A,B,S;
float *mas;
AnsiString sg,sv;
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y),IB1(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
for(i=0;i<Y;i++)
    for(j=0;j<X;j++)
       {
        IB1.Image[i][j] = 0;
       }
ReadBMPFile("k.bmp",xm,ym);//Чтение заголовка BMP файла
ImageBase IBk(xm,ym);
IBk.ReadFile("k.bmp");//Чтение изображения из файла
S = 0;
for(i=0;i<Y-ym;i++)
    for(j=0;j<X-xm;j++)
      {S=0;
       for(i1=0;i1<ym;i1++)
          {
          for(j1=0;j1<xm;j1++)
             {
              S += sqrt((IB.Image[i+i1][j+j1]-IBk.Image[i1][j1])*(IB.Image[i+i1][j+j1]-IBk.Image[i1][j1]));

//              IB1.ImageComplex[i][j] += IB.Image[i+i1][j+j1]*IBk.Image[i1][j1];
             }
          }
       if(S!=0)
       IB1.ImageComplex[i][j] = polar((float)1/S,(float)0.);
      }
//IB1.ViewImage(Form1->Image1,1);//Вывод на форму изображения
IB1.ViewImageComplex(Form3->Image1,0,1,1);
Form3->Show();
}
//---------------------------------------------------------------------------


void __fastcall TForm1::N18Click(TObject *Sender)
{
 Form4->Show();        
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N29Click(TObject *Sender)
{
double Kw,x,y,r,f,K,L,size,dx;
int i,j,X,Y;
OpenDialog1->InitialDir = ".";
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла
f = StrToFloat(Form4->Edit1->Text);
Kw = 2*M_PI/StrToFloat(Form2->Edit6->Text)*1E9;
size = StrToFloat(Form2->Edit10->Text);
dx = size/IB.SizeImageY;
for(i=0;i<IB.SizeImageY;i++)
   {
    x = (i-IB.SizeImageY/2)*dx;
    for(j=0;j<IB.SizeImageX;j++)
       {
        y = (j-IB.SizeImageX/2)*dx;
        r = sqrt(x*x+y*y);
        K = (double)IB.Image[i][j];
        L = Kw/f*(x*x+y*y);
        if(r<IB.SizeImageX/2*dx)
          IB.ImageComplex[i][j] = polar((float)1.,(float)(K*2*M_PI/255.+L));
        else
          IB.ImageComplex[i][j] = polar((float)0.,(float)(0.));
       }
   }
IB.ViewImageComplex_(Form1->Image2,0,1,1);//Вывод на форму комплексного изображения
IB.ViewImageComplex_(Form1->Image3,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("rez_i.bmp",0);
IB.WriteFile("rez_a.bmp",1);
IB.WriteFile("rez_p.bmp",2);
}
//---------------------------------------------------------------------------



void __fastcall TForm1::N30Click(TObject *Sender)
{
 int i,j,i1,j1,k,m;
 int N;
 float npl,nps;
 float x,y,r,fi,p,freq,dx;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;

 ImageBase IB(N,N);

 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx)
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB.Image[i][j] = (int)p;/*присвоение фазы*/
               IB.ImageComplex[i][j] = polar((float)sign(Jn_i(freq*r,m)),(float)(m*fi));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }

         }
      }

IB.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N31Click(TObject *Sender)
{
 int i,j,i1,j1,k,m;
 int N;
 float npl,nps;
 float x,y,r,fi,p,freq,dx,gam;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;
 gam = StrToFloat(Form2->Edit3->Text);

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;

 ImageBase IB(N,N);
 ImageBase IB_(N,N);
 ImageBase IBC(N,N);

 for ( i=0;i<N;i++ )
      {
       y = (i-N/2)*dx;
       for ( j=0;j<N;j++ )
          {
           x = (j-N/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(N/2.)*dx&&(r>dx))
              {
               p = 1*(m)*fi/2/M_PI*255.;
               IB.Image[i][j] = (int)p;/*присвоение фазы*/
               IB.ImageComplex[i][j] = polar((float)1.,(float)(gam*log((r))+(m)*fi));
               IB_.ImageComplex[i][j] = polar((float)1.,(float)(-gam*log((r))+(-m)*fi));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB.Image[i][j] = arg(IB.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                }
         }
      }
IB.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N32Click(TObject *Sender)
{
 int i,j,i1,j1,k,m,X,Y;
 int N;
 float npl,nps;
 float x,y,r,fi,p,freq,dx;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;




OpenDialog1->InitialDir = ".";
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
ImageBase IB_(X,Y);
ImageBase IBC(X,Y);
IB.ReadFile("temp.bmp");//Чтение изображения из файла

 for ( i=0;i<Y;i++ )
      {
       y = (i-Y/2)*dx;
       for ( j=0;j<X;j++ )
          {
           x = (j-X/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(X/2.)*dx)
              {
               IB_.ImageComplex[i][j] = polar(abs(IB.ImageComplex[i][j]),-arg(IB.ImageComplex[i][j]));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
          switch (kod)
                {
          case 1:
                 IB.Image[i][j] = arg(IB.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 2:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 3:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq)*(r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*(r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 4:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(x*x))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(x*x)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                 break;
          case 5:
                 IBC.ImageComplex[i][j]+=IB.ImageComplex[i][j]*polar((float)1.,(float)(freq*freq)*(r*r))
                 +IB_.ImageComplex[i][j]*polar((float)1.,(float)(-freq*freq*(r*r)));
                 IB.ImageComplex[i][j] = IBC.ImageComplex[i][j];
                 IB.Image[i][j] = arg(IBC.ImageComplex[i][j])/2./M_PI*255.;
                }
         }
      }

IB.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::N33Click(TObject *Sender)
{
 int i,j,i1,j1,k,m,X,Y;
 int N,KL;
 float npl,nps;
 float x,y,r,fi,p,freq,dx;
 int kod;


 N = StrToFloat(Form2->CSpinEdit10->Value);
 m = StrToInt(Form2->CSpinEdit1->Value);
 freq = StrToFloat(Form2->Edit2->Text);
 dx = StrToFloat(Form2->Edit10->Text)/N;
 KL = StrToInt(Form4->CSpinEdit1->Value);

 kod = (int)(Form2->RadioButton13->Checked)*1+(int)(Form2->RadioButton1->Checked)*2+
       (int)(Form2->RadioButton2->Checked)*3+(int)(Form2->RadioButton3->Checked)*4+
       (int)(Form2->RadioButton4->Checked)*5;

OpenDialog1->InitialDir = ".";
ReadBMPFile("temp.bmp",X,Y);//Чтение заголовка BMP файла
ImageBase IB(X,Y);
ImageBase IB_(X,Y);

IB.ReadFile("temp.bmp");//Чтение изображения из файла

 for ( i=0;i<Y;i++ )
      {
       y = (i-Y/2)*dx;
       for ( j=0;j<X;j++ )
          {
           x = (j-X/2)*dx;
           r = sqrt(x*x+y*y);
           if (atan2(y,(x+0.000001))>=0)
              fi = atan2(y,(x+0.000001));
           else
              fi = atan2(y,(x+0.000001))+2*M_PI;
           if (r<(X/2.)*dx)
              {
               IB_.Image[i][j] = IB.Image[i][j]/(int)(256/KL);
               IB.Image[i][j] = IB_.Image[i][j]*256/KL;
               IB.ImageComplex[i][j] = polar((float)1.,(float)(IB.Image[i][j]*2*M_PI/256));
              }
           else
              {
               IB.ImageComplex[i][j] = polar((float)0.,(float)(0));
               IB_.ImageComplex[i][j] = polar((float)0.,(float)(0));
              }
           }
      }

IB.ViewImageComplex_(Form1->Image1,2,1,1);//Вывод на форму комплексного изображения
IB.WriteFile("temp.bmp",2);
}
//---------------------------------------------------------------------------

